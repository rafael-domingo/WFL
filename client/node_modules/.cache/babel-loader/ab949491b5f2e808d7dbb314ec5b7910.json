{"ast":null,"code":"export const YelpAPI = {\n  search(cuisine, sort, location) {\n    if (!location.name) {\n      return fetch(`/api/${cuisine}/${sort}/${location.latitude}/${location.longitude}`).then(response => {\n        console.log(response);\n        return response.json();\n      });\n    } else {\n      return fetch(`/search/${cuisine}/${sort}/${location.name}`).then(response => {\n        console.log(response);\n        return response.json();\n      });\n    }\n  },\n\n  new(location) {\n    if (!location.name) {\n      return fetch(`http://localhost:5000/api/new/${location.latitude}/${location.longitude}`).then(response => {\n        console.log(response);\n        return response.json();\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return fetch(`http://localhost:5000/search/new/${location.name}`).then(response => {\n        console.log(response);\n        return response.json();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n\n  cheap(cuisine, sort, location) {\n    if (!location.name) {\n      return fetch(`http://localhost:5000/api/${cuisine}/${sort}/cheap/${location.latitude}/${location.longitude}`).then(response => {\n        console.log(response);\n        return response.json();\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return fetch(`http://localhost:5000/search/${cuisine}/${sort}/cheap/${location.name}`).then(response => {\n        console.log(response);\n        return response.json();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/rafaeldomingo/Documents/GitHub/WFL/client/src/util/YelpAPI/index.js"],"names":["YelpAPI","search","cuisine","sort","location","name","fetch","latitude","longitude","then","response","console","log","json","new","catch","err","cheap"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;AACnBC,EAAAA,MAAM,CAACC,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AAC9B,QAAI,CAACA,QAAQ,CAACC,IAAd,EAAqB;AACnB,aAAOC,KAAK,CAAE,QAAOJ,OAAQ,IAAGC,IAAK,IAAGC,QAAQ,CAACG,QAAS,IAAGH,QAAQ,CAACI,SAAU,EAApE,CAAL,CAA4EC,IAA5E,CAAiFC,QAAQ,IAAI;AAClGC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,CAAP;AAID,KALD,MAKO;AACL,aAAOP,KAAK,CAAE,WAAUJ,OAAQ,IAAGC,IAAK,IAAGC,QAAQ,CAACC,IAAK,EAA7C,CAAL,CAAqDI,IAArD,CAA0DC,QAAQ,IAAI;AAC3EC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,CAAP;AAID;AAEF,GAdkB;;AAgBnBC,EAAAA,GAAG,CAACV,QAAD,EAAW;AACZ,QAAI,CAACA,QAAQ,CAACC,IAAd,EAAoB;AAClB,aAAOC,KAAK,CAAE,iCAAgCF,QAAQ,CAACG,QAAS,IAAGH,QAAQ,CAACI,SAAU,EAA1E,CAAL,CAAkFC,IAAlF,CAAuFC,QAAQ,IAAI;AACxGC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,EAGJE,KAHI,CAGEC,GAAG,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,OALM,CAAP;AAMD,KAPD,MAOO;AACL,aAAOV,KAAK,CAAE,oCAAmCF,QAAQ,CAACC,IAAK,EAAnD,CAAL,CAA2DI,IAA3D,CAAgEC,QAAQ,IAAI;AACjFC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,EAGJE,KAHI,CAGEC,GAAG,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,OALM,CAAP;AAMD;AAEF,GAjCkB;;AAmCnBC,EAAAA,KAAK,CAACf,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AAC7B,QAAI,CAACA,QAAQ,CAACC,IAAd,EAAoB;AAClB,aAAOC,KAAK,CAAE,6BAA4BJ,OAAQ,IAAGC,IAAK,UAASC,QAAQ,CAACG,QAAS,IAAGH,QAAQ,CAACI,SAAU,EAA/F,CAAL,CAAuGC,IAAvG,CAA4GC,QAAQ,IAAI;AAC7HC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,EAGJE,KAHI,CAGEC,GAAG,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,OALM,CAAP;AAMD,KAPD,MAOO;AACL,aAAOV,KAAK,CAAE,gCAA+BJ,OAAQ,IAAGC,IAAK,UAASC,QAAQ,CAACC,IAAK,EAAxE,CAAL,CAAgFI,IAAhF,CAAqFC,QAAQ,IAAI;AACtGC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,OAHM,EAGJE,KAHI,CAGEC,GAAG,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,OALM,CAAP;AAMD;AAEF;;AApDkB,CAAhB","sourcesContent":["export const YelpAPI = {\n    search(cuisine, sort, location) {\n      if (!location.name)  {\n        return fetch(`/api/${cuisine}/${sort}/${location.latitude}/${location.longitude}`).then(response => {\n          console.log(response);\n          return response.json();\n        })\n      } else {\n        return fetch(`/search/${cuisine}/${sort}/${location.name}`).then(response => {\n          console.log(response);\n          return response.json();\n        })\n      }\n   \n    },\n\n    new(location) {\n      if (!location.name) {\n        return fetch(`http://localhost:5000/api/new/${location.latitude}/${location.longitude}`).then(response => {\n          console.log(response);\n          return response.json();\n        }).catch(err => {\n          console.log(err);\n        })\n      } else {\n        return fetch(`http://localhost:5000/search/new/${location.name}`).then(response => {\n          console.log(response);\n          return response.json();\n        }).catch(err => {\n          console.log(err);\n        })\n      }\n     \n    },\n\n    cheap(cuisine, sort, location) {\n      if (!location.name) {\n        return fetch(`http://localhost:5000/api/${cuisine}/${sort}/cheap/${location.latitude}/${location.longitude}`).then(response => {\n          console.log(response);\n          return response.json();\n        }).catch(err => {\n          console.log(err);\n        })\n      } else {\n        return fetch(`http://localhost:5000/search/${cuisine}/${sort}/cheap/${location.name}`).then(response => {\n          console.log(response);\n          return response.json();\n        }).catch(err => {\n          console.log(err);\n        })\n      }\n    \n    }\n} "]},"metadata":{},"sourceType":"module"}